https://github.com/dekuNukem/Nintendo_Switch_Reverse_Engineering/issues/7#issuecomment-328680285

Please read the documentation here.
The x02 at the end is the subcmd that requests device info.
You need to reply to this with a 0x21 input report.

To register your controller you need to forge the following subcmd replies when asked:

Send 82 02 reply that contains a forged device info
Send 90 10 00 60 00 00 10 spi reply that contains a forged serial number or just zeroes
Send 80 08 reply (ack for receiving the set shipment command)
Send 80 03 reply (ack that you changed input report format)
Now you need to start sending forged 0x30 input reports every 15ms. I don't know what switch will do if you don't, so try both.

Send 83 04 reply that contains the elapsed time after pressing a trigger. Better not be zero.
Send 90 10 80 60 00 00 18 spi reply that contains forged Factory Sensor and Stick device parameters
Send 90 10 98 60 00 00 12 spi reply that contains forged Factory Stick device parameters 2
Send 90 10 10 80 00 00 18 spi reply that contains forged User Analog sticks calibration. Send zeroes.
Send 90 10 3d 60 00 00 19 spi reply that contains forged Factory configuration & calibration 2.
Send 90 10 20 60 00 00 18 spi reply that contains forged Factory configuration & calibration 1.
Send 80 48 reply (ack that you enabled vibration)
Send 80 40 reply (ack that you enabled 6-Axis sensor)
Send 80 30 reply (ack that you set Player lights)
Send 80 48 reply (ack that you enabled vibration again)
Congrats, you just paired your device with Switch.

Have in mind, that if switch lost a packet it will send the same command again. So you should send them according to the output report you received from Switch. Not sequentially.



===

Docs ::
https://github.com/timmeh87/switchnotes/blob/master/console_pairing_session

 
communication of sucessful pairing with nintendo switch console.
(from the perspective of the controller)
only the significant bytes of packets are shown. they are all padded out to 49 bytes with zeros
the packets are broken onto two lines for ease of reading. the first line is the payload,
and the second line is the subcommand section

Once the controller is paired, its color appears black on the switch menu screen.
Obviously this is because the SPI reads are returning zero for personal data such as color.
It would be best to emulate these areas with EEPROM. looking at this session,
the bare minimum eeprom emulator should work for these addresses

6000
6020
603d (twice)
6080
6098 (twice)
8010

the range (0x6000 - 0x8fff) could be easily emulated to cover this small region.
its not clear what will happen later on if the wii tries to use the other 512k of 
the joycon eeprom memory range

-------------------------------------
Successful pairing session follows
-------------------------------------

rcvd: 0x01 0x0E 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x02 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
Received subcommand 02 : Request device info
Sent: 0x21 0x05 0x8E 0x84 0x00 0x12 0x01 0x18 0x80 0x01 0x18 0x80 0x80 
0x82 0x02 0x03 0x48 0x01 0x02 0xA2 0x55 0x79 0xAB 0x78 0xCC 0x01 0x01 
 
rcvd: 0x01 0x0F 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x08 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
Received subcommand 08 : set shipment
Sent: 0x21 0x06 0x8E 0x84 0x00 0x12 0x01 0x18 0x80 0x01 0x18 0x80 0x80 
0x80 0x08 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
 
rcvd: 0x01 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x10 0x00 0x60 0x00 0x00 0x10  0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
Received subcommand 10 : SPI flash read
Sent: 0x21 0x07 0x8E 0x84 0x00 0x12 0x01 0x18 0x80 0x01 0x18 0x80 0x80 
0x90 0x10 0x00 0x60  0x00 0x00 0x00 0x00 0x00 0x00 0x00 
 
rcvd: 0x01 0x01 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x10 0x3D 0x60 0x00 0x00 0x19 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
Received subcommand 10 : SPI flash read
Sent: 0x21 0x08 0x8E 0x84 0x00 0x12 0x01 0x18 0x80 0x01 0x18 0x80 0x80 
0x90 0x10 0x3D 0x60 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
 
rcvd: 0x01 0x02 0x00 0x01 0x40 0x40 0x00 0x01 0x40 0x40 
0x03 0x30 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
Received subcommand 03 : Set input report mode
Sent: 0x21 0x09 0x8E 0x84 0x00 0x12 0x01 0x18 0x80 0x01 0x18 0x80 0x80 
0x80 0x03 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
 
rcvd: 0x01 0x03 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x04 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
Received subcommand 04 : Trigger buttons elapsed time
Sent: 0x21 0x0A 0x8E 0x84 0x00 0x12 0x01 0x18 0x80 0x01 0x18 0x80 0x80 
0x83 0x04 0x00 0xCC 0x00 0xEE 0x00 0xFF 0x00 0x00 0x00 
 
rcvd: 0x01 0x04 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x10 0x80 0x60 0x00 0x00 0x18 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
Received subcommand 10 : SPI flash read
Sent: 0x21 0x0B 0x8E 0x84 0x00 0x12 0x01 0x18 0x80 0x01 0x18 0x80 0x80 
0x90 0x10 0x80 0x60 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
 
rcvd: 0x01 0x05 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x10 0x98 0x60 0x00 0x00 0x12 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
Received subcommand 10 : SPI flash read
Sent: 0x21 0x0C 0x8E 0x84 0x00 0x12 0x01 0x18 0x80 0x01 0x18 0x80 0x80 
0x90 0x10 0x98 0x60 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
 
rcvd: 0x01 0x06 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x10 0x10 0x80 0x00 0x00 0x18 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
Received subcommand 10 : SPI flash read
Sent: 0x21 0x0D 0x8E 0x84 0x00 0x12 0x01 0x18 0x80 0x01 0x18 0x80 0x80 
0x90 0x10 0x10 0x80 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
 
rcvd: 0x01 0x07 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x10 0x3D 0x60 0x00 0x00 0x19 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
Received subcommand 10 : SPI flash read
Sent: 0x21 0x0E 0x8E 0x84 0x00 0x12 0x01 0x18 0x80 0x01 0x18 0x80 0x80 
0x90 0x10 0x3D 0x60 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
 
rcvd: 0x01 0x08 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x10 0x20 0x60 0x00 0x00 0x18 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
Received subcommand 10 : SPI flash read
Sent: 0x21 0x00 0x8E 0x84 0x00 0x12 0x01 0x18 0x80 0x01 0x18 0x80 0x80 
0x90 0x10 0x20 0x60 0x00 0x00 0x00 0x00 0x00 0x00 0x00 

rcvd: 0x01 0x09 0x00 0x01 0x40 0x40 0x00 0x01 0x40 0x40 
0x48 0x01 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
Received subcommand 48 : Enable vibration
Sent: 0x21 0x02 0x8E 0x84 0x00 0x12 0x01 0x18 0x80 0x01 0x18 0x80 0x80 
0x80 0x48 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 

rcvd: 0x01 0x0A 0x00 0x01 0x40 0x40 0x00 0x01 0x40 0x40 
0x40 0x01 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
Received subcommand 40 : Enable 6-Axis sensor
Sent: 0x21 0x03 0x8E 0x84 0x00 0x12 0x01 0x18 0x80 0x01 0x18 0x80 0x80 
0x80 0x40 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 

rcvd: 0x01 0x0B 0xC2 0x00 0x0F 0x40 0xC2 0x00 0x0F 0x40 
0x48 0x01 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
Received subcommand 48 : Enable vibration
Sent: 0x21 0x04 0x8E 0x84 0x00 0x12 0x01 0x18 0x80 0x01 0x18 0x80 0x80 
0x80 0x48 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 

rcvd: 0x01 0x0C 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x30 0x01 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
Received subcommand 30 : Set player lights
Sent: 0x21 0x05 0x8E 0x84 0x00 0x12 0x01 0x18 0x80 0x01 0x18 0x80 0x80 
0x80 0x30 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 

<console goes to sleep after a time...>

rcvd: 0x01 0x0D 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x06 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
Received subcommand 06 : Reset connection (Disconnect)
Sent: 0x21 0x07 0x8E 0x84 0x00 0x12 0x01 0x18 0x80 0x01 0x18 0x80 0x80 
0x80 0x06 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
